import sys
from random import shuffle
import customtkinter as ctk
from tkinter import messagebox
import json
import matplotlib.pyplot as plt
from datetime import datetime
from docx import Document
import os
'''В общем, этот файл пока самая последняя версия. дальше нужно реализовать советы про ментальное здоровье и осанку. про менталку нужно задавать вопросы
    как засыпаете, как просыпаетесь, что делаете перед сном и отталкиваясь от ответов приводить советы.'''

class BlankField(Exception):
    """Исключение для пустых полей ввода."""
    def __init__(self, message='Обнаружены пустые строки или пункты, заполни их'):
        super(BlankField, self).__init__(message)

class GymHelper(ctk.CTk):
    def __init__(self):
        super().__init__()
        self.title("Gym Helper")
        self.geometry("700x500")
        # Инициализация интерфейса
        self.init_ui()
        # Базы данных
        self.database = {
            'Age': None, 'Height': None, 'Weight': None,
            'Bulking': False, 'Losing': False, 'Healthing': False, 'Sex': None
        }
        self.exercise_database = {
            'Bulking': [
                ('Присед со штангой', 2), ('Сгибание/разгибание ног на тренажёре', 2),
                ('Тяга верхнего блока', 3), ('Горизонтальная тяга блока', 3),
                ('Поднятие штанги в наклоне', 3), ('Поднятие штанги на бицепс', 2),
                ('Молотки с гантелями', 2), ('Поднятие гантели на бицепс со скручиванием', 2),
                ('Опускание туловища на брусьях', 3), ('Разгибание верхнего блока с канатом', 3),
                ('Жим лёжа', 3), ('Жим гантелей лёжа', 3), ('Махи гантелей', 2), ('Разведение рук', 2)
            ],
            'Losing': [
                ('Бег на дорожке', 0), ('Велоупражнения', 0), ('Бёрпи', 1),
                ('Выпрыгивания с упора сидя', 1), ('Альпинист', 1), ('Бег на месте', 1)
            ],
            'Healthing': [
                ('Растяжка', -1), ('Вис на турнике', -1), ('Ходьба по лесу', 0), ('Подъём коленей', 1)
            ]
        }
        self.duration_database = {
            1: ['1-2 минуты', '2-3 минуты', '30 секунд'],
            0: ['1 час', '2 часа', 'Полчаса'],
            1: ['10-15 раз', '20-25 раз', '5 раз'],
            2: ['6-8 раз', '8-10 раз', '4-6 раз'],
            3: ['4-6 раз', '6-8 раз', '2-4 раз']
        }
        # Прогресс пользователя
        self.progress_data = {}
        self.load_progress()

    def init_ui(self):
        # Главный фрейм
        main_frame = ctk.CTkFrame(self)
        main_frame.pack(fill="both", expand=True)
        # Стек виджетов
        self.stacked_widget = ctk.CTkFrame(main_frame)
        self.stacked_widget.pack(fill="both", expand=True)
        # Создание страниц
        page0 = ctk.CTkFrame(self.stacked_widget)  # Начальная страница
        page1 = ctk.CTkFrame(self.stacked_widget)  # Страница ввода данных
        page2 = ctk.CTkFrame(self.stacked_widget)  # Страница тренировок
        page3 = ctk.CTkFrame(self.stacked_widget)  # Страница ментального здоровья
        page0.pack(fill="both", expand=True)
        page1.pack(fill="both", expand=True)
        page2.pack(fill="both", expand=True)
        page3.pack(fill="both", expand=True)
        # Настройка UI для страниц
        self.page0_ui(page0)  # Начальная страница
        self.page1_ui(page1)  # Страница ввода данных
        self.page2_ui(page2)  # Страница тренировок
        self.page3_ui(page3)  # Страница ментального здоровья
        # Показываем первую страницу
        page1.pack_forget()
        page2.pack_forget()
        page3.pack_forget()

    def page0_ui(self, page):
        layout = ctk.CTkFrame(page, fg_color="#333333")  # окантовка
        layout.pack(fill="both", expand=True, padx=20, pady=20)

        # Заголовок
        title_label = ctk.CTkLabel(layout, text="Выберите цель:", font=("Arial", 24))
        title_label.pack(pady=20)

        # Кнопка "Улучшить осанку"
        posture_button = ctk.CTkButton(
            layout, text="Улучшить осанку", command=self.improve_posture
        )
        posture_button.pack(pady=10)

        # Кнопка "Улучшить сон"
        sleep_button = ctk.CTkButton(
            layout, text="Улучшить ментальное здоровье", command=self.improve_sleep
        )
        sleep_button.pack(pady=10)

        # Кнопка "Улучшить тело"
        body_button = ctk.CTkButton(
            layout, text="Улучшить тело", command=self.go_to_main_program
        )
        body_button.pack(pady=10)

    def improve_posture(self):
        messagebox.showinfo("Информация", "Здесь будет информация о улучшении осанки.")

    def improve_sleep(self):
        # Переход на страницу ментального здоровья
        self.stacked_widget.winfo_children()[3].pack(fill="both", expand=True)
        self.stacked_widget.winfo_children()[0].pack_forget()

    def go_to_main_program(self):
        # Переход на страницу 1 (основная программа)
        self.stacked_widget.winfo_children()[1].pack(fill="both", expand=True)
        self.stacked_widget.winfo_children()[0].pack_forget()

    def page1_ui(self, page):
        layout = ctk.CTkFrame(page, fg_color="#333333")  # окантовка
        layout.pack(fill="both", expand=True, padx=20, pady=20)
        
        # Приветственная информация
        welcome_label1 = ctk.CTkLabel(layout, text="Привет! Если тебе нужна помощь в тренировках, то смело используй эту программу.")
        welcome_label1.pack(pady=10)
        welcome_label2 = ctk.CTkLabel(layout, text="Для начала заполни данные ниже:")
        welcome_label2.pack(pady=5)
        
        # Ввод данных пользователя
        input_frame = ctk.CTkFrame(layout)
        input_frame.pack(pady=10)
        
        self.age_input = ctk.CTkEntry(input_frame, placeholder_text="Возраст")
        self.height_input = ctk.CTkEntry(input_frame, placeholder_text="Рост (см)")
        self.weight_input = ctk.CTkEntry(input_frame, placeholder_text="Вес (кг)")
        
        self.age_input.grid(row=0, column=0, padx=10, pady=5)
        self.height_input.grid(row=0, column=1, padx=10, pady=5)
        self.weight_input.grid(row=0, column=2, padx=10, pady=5)
        
        # Выбор пола
        sex_frame = ctk.CTkFrame(layout)
        sex_frame.pack(pady=10)
        
        self.sex_var = ctk.StringVar(value="")
        male_radio = ctk.CTkRadioButton(sex_frame, text="Мужской", variable=self.sex_var, value="Мужской")
        female_radio = ctk.CTkRadioButton(sex_frame, text="Женский", variable=self.sex_var, value="Женский")
        
        male_radio.grid(row=0, column=0, padx=10)
        female_radio.grid(row=0, column=1, padx=10)
        
        # Выбор целей
        goal_frame = ctk.CTkFrame(layout)
        goal_frame.pack(pady=10)
        
        self.goal_var = ctk.StringVar(value="")
        bulk_radio = ctk.CTkRadioButton(goal_frame, text="Набрать мышечную массу", variable=self.goal_var, value="Bulking")
        skinny_radio = ctk.CTkRadioButton(goal_frame, text="Похудеть", variable=self.goal_var, value="Losing")
        health_radio = ctk.CTkRadioButton(goal_frame, text="Укрепить здоровье", variable=self.goal_var, value="Healthing")
        
        bulk_radio.pack(anchor="w", pady=5)
        skinny_radio.pack(anchor="w", pady=5)
        health_radio.pack(anchor="w", pady=5)
        
        # Кнопка для отправки данных
        self.fill_info_button = ctk.CTkButton(layout, text="Ввести данные", command=self.fill_info)
        self.fill_info_button.pack(pady=10)

    def page2_ui(self, page):
        layout = ctk.CTkFrame(page, fg_color="#333333")  # окантовка
        layout.pack(fill="both", expand=True, padx=20, pady=20)
        # Кнопка для просмотра основной информации (остается вверху)
        main_info_button = ctk.CTkButton(layout, text="Основная информация", command=self.welcome)
        main_info_button.pack(pady=10)
        # Разделение на левую и правую части
        left_frame_outer = ctk.CTkFrame(layout, fg_color="transparent")
        left_frame_outer.pack(side="left", fill="both", expand=True, padx=10)
        right_frame_outer = ctk.CTkFrame(layout, fg_color="transparent")
        right_frame_outer.pack(side="right", fill="both", expand=True, padx=10)
        # Левая часть
        left_frame = ctk.CTkFrame(left_frame_outer, fg_color="#2b2b2b")  # Прозрачный фон
        left_frame.pack(fill="both", expand=True, padx=10, pady=10)
        days_frame = ctk.CTkFrame(left_frame, fg_color="transparent")  # Прозрачный фон
        days_frame.pack(pady=10)
        days_label = ctk.CTkLabel(days_frame, text="Выберите дни тренировок:")
        days_label.pack(pady=5)
        self.days_checkboxes = []
        for day in ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье']:
            checkbox = ctk.CTkCheckBox(days_frame, text=day)
            checkbox.pack(anchor="w", padx=10, pady=2)
            self.days_checkboxes.append(checkbox)
        start_workout_button = ctk.CTkButton(left_frame, text="Начать тренировку", command=self.start_workout)
        start_workout_button.pack(pady=10)
        measure_body_fat_button = ctk.CTkButton(left_frame, text="Узнать оптимальное КБЖУ", command=self.body_fat_measure)
        measure_body_fat_button.pack(pady=10)
        # Правая часть
        right_frame = ctk.CTkFrame(right_frame_outer, fg_color="#2b2b2b")  # Прозрачный фон
        right_frame.pack(fill="both", expand=True, padx=10, pady=10)
        progress_button = ctk.CTkButton(right_frame, text="Просмотреть прогресс", command=self.show_progress_graph)
        progress_button.pack(pady=10)
        update_progress_button = ctk.CTkButton(right_frame, text="Обновить прогресс", command=self.update_progress)
        update_progress_button.pack(pady=10)
        save_progress_button = ctk.CTkButton(right_frame, text="Сохранить прогресс", command=self.save_progress)
        save_progress_button.pack(pady=10)
        reset_progress_button = ctk.CTkButton(right_frame, text="Сбросить прогресс", command=self.reset_progress)
        reset_progress_button.pack(pady=10)

    def load_progress(self):
        """Загрузка прогресса из файла."""
        try:
            with open('progress_data.json', 'r') as file:
                self.progress_data = json.load(file)
        except FileNotFoundError:
            self.progress_data = {}

    def save_progress(self):
        """Сохранение прогресса в файл."""
        try:
            with open('progress_data.json', 'w') as file:
                json.dump(self.progress_data, file, indent=4)
            messagebox.showinfo("Успех", "Прогресс успешно сохранён!")
        except Exception as e:
            messagebox.showerror("Ошибка", f"Не удалось сохранить прогресс: {str(e)}")

    def update_progress(self):
        """Обновляет данные о прогрессе пользователя."""
        try:
            current_date = datetime.now().strftime("%Y-%m-%d")
            current_weight = float(self.weight_input.get().replace(',', '.'))
            self.progress_data[current_date] = current_weight
            self.save_progress()
            messagebox.showinfo("Успех", "Прогресс обновлён!")
        except ValueError:
            messagebox.showerror("Ошибка", "Проверьте корректность введенных данных. Важно, чтобы вы вводили только числа.")

    def show_progress_graph(self):
        """Отображение графика прогресса."""
        if not self.progress_data:
            messagebox.showinfo("Информация", "Нет данных о прогрессе.")
            return
        sorted_dates = sorted(self.progress_data.keys())
        weights = [self.progress_data[date] for date in sorted_dates]
        plt.figure(figsize=(8, 5))
        plt.plot(sorted_dates, weights, marker='o', linestyle='-', color='b')
        plt.title("Прогресс по весу")
        plt.xlabel("Даты")
        plt.ylabel("Вес (кг)")
        plt.xticks(rotation=45)
        plt.grid(True)
        plt.tight_layout()
        plt.show()

    def reset_progress(self):
        """Сброс прогресса."""
        self.progress_data = {}
        self.save_progress()
        messagebox.showinfo("Успех", "Прогресс успешно сброшен!")
    def page3_ui(self, page):
        layout = ctk.CTkFrame(page, fg_color="#333333")
        layout.pack(fill="both", expand=True, padx=20, pady=20)

        title_label = ctk.CTkLabel(layout, text="Выберите проблемы:", font=("Arial", 20))
        title_label.pack(pady=10)

        # Список проблем
        problems_frame = ctk.CTkFrame(layout, fg_color="transparent")
        problems_frame.pack(pady=10)

        self.problem_vars = {}
        problems = [
            "Проблема со сном",
            "Повышенная тревожность",
            "Чувствуете усталость днем",
            "Сложно сосредоточиться",
        ]

        for problem in problems:
            var = ctk.BooleanVar()
            checkbox = ctk.CTkCheckBox(problems_frame, text=problem, variable=var)
            checkbox.pack(anchor="w", pady=5)
            self.problem_vars[problem] = var

        # Кнопка для генерации советов
        generate_advice_button = ctk.CTkButton(
            layout, text="К советам", command=self.generate_mental_health_advice
        )
        generate_advice_button.pack(pady=10)


    def generate_mental_health_advice(self):
        """Генерирует файл с советами по ментальному здоровью на основе выбранных проблем."""
        # Получаем список выбранных проблем
        selected_problems = [
            problem for problem, var in self.problem_vars.items() if var.get()
        ]

        if not selected_problems:
            messagebox.showwarning("Предупреждение", "Выберите хотя бы одну проблему.")
            return

        # Создание документа
        doc = Document()
        doc.add_heading("Советы для улучшения сна и самочувствия", level=1)

        # Словарь с советами для каждой проблемы
        advice_dict = {
            "Проблема со сном": (
                "Проблема со сном не решается 'просто нужно больше спать'. Наш сон состоит из трех основных элементов: "
                "засыпание, время во сне, пробуждение. Чтобы улучшить сон, нужно оценить, где именно у вас есть проблемы, "
                "и улучшить именно 'отстающий элемент'.\n\n\n"
                "\t *Проблема с засыпанием часто связана с большой перенапряжением ЦНС или физическим напряжением перед сном. "
                "Вот, что нужно сделать, чтобы избавиться от этого:\n\n*"
                "*  - Создайте ритуал перед сном:**\n"
                "Начните практиковать технику 'постепенного расслабления' за 30–60 минут до сна. Прогуляйтесь на улице "
                "минут 20, примите теплый душ или почитайте книгу. Старайтесь минимизировать использование гаджетов, так как "
                "яркий свет экранов, особенно синий спектр, уменьшает выработку мелатонина — гормона, который регулирует циркадные "
                "ритмы и помогает организму готовиться ко сну. Если использование гаджетов неизбежно, используйте функцию 'ночной свет', "
                "которая снижает количество синего света и делает изображение более теплым.\n\n"
                "**  - Настройте освещение:\n**"
                "Уменьшите яркость искусственного света и постарайтесь проводить время в мягком, приглушенном освещении. Мелатонин "
                "вырабатывается только в темноте, поэтому важно создать условия, которые способствуют его естественной выработке.\n\n"
                "**  - Медитация и рефлексия:\n**"
                "За 10 минут до сна попробуйте медитировать или просто посидите в тишине и темноте. Мысленно подведите итоги дня. "
                "Если ваши мысли продолжают мешать, запишите их в блокнот — это позволит 'выгрузить' их из головы и освободить ум для отдыха.\n\n"
                "**  - Техники расслабления:\n**"
                "Мышечная релаксация: Лягте в удобное положение и поочередно напрягайте и расслабляйте группы мышц, начиная с пальцев ног "
                "и заканчивая лицом. Напрягайте на 5 секунд, а расслабляйте на 10. Это поможет вашему телу перейти в состояние покоя и снять "
                "усталость с мышц.\n"
                "Дыхательная техника '4-7-8': Сделайте глубокий вдох носом на 4 счета, задержите дыхание на 7 счетов и медленно выдохните "
                "ртом на 8 счетов. Эта практика снижает частоту сердечных сокращений и помогает успокоить нервную систему. Повторите 4-8 раз. "
                "На пятый раз вы уже почувствуете, как засыпаете.\n\n"
                "**  - Ограничение стимулирующего контента:**\n"
                "Избегайте просмотра коротких видеороликов, сериалов или фильмов перед сном. Такой контент может активизировать "
                "центральную нервную систему, затрудняя процесс засыпания. Вместо этого выберите спокойные занятия, такие как чтение легкой "
                "литературы или прослушивание расслабляющей музыки.\n\n"
                "**Дополнение**:\n"
                "Нашим сном руководят циркадные ритмы, которые часто называют 'внутренними часами'. Вечером начинает вырабатываться мелатонин "
                "(гормон сна), что вызывает чувство сонливости в конце дня. Мелатонин играет ключевую роль не только в регуляции сна, но и в "
                "поддержании общего здоровья благодаря своим антиоксидантным свойствам. Дефицит мелатонина может привести к нарушениям сна и "
                "хронической усталости.\n\n\n"
                "\t *Проблема со сном может возникать из-за стресса, неправильных условий для сна или нарушений циркадных ритмов (сбитого режима).*\n\n"
                "**Стресс** — одна из самых распространённых причин бессонницы. Когда мы переживаем, наш организм выделяет гормоны, такие как кортизол, "
                "которые мешают полноценному отдыху. Кроме того, современный образ жизни часто нарушает наши естественные биологические часы, особенно "
                "если мы проводим много времени за гаджетами перед сном.\n\n"
                "**  - Создайте комфортные условия для сна:**\n"
                "Убедитесь, что температура в комнате находится в диапазоне 16–18°C — это идеальная температура для сна. Если зимой батареи сушат воздух, "
                "то купите увлажнитель. Поверьте, 5 тыс. рублей это ничего по сравнению с нормальным сном. Замените старый матрас или подушку, если они "
                "вызывают дискомфорт. Используйте плотные шторы или маску для сна, чтобы свет не мешал спать, ведь даже сквозь веки мы можем видеть свет, "
                "а также беруши, если есть шум. Важно также придерживаться режима: ложитесь и вставайте в одно и то же время каждый день, даже в выходные. "
                "Это поможет вашему организму выработать новый, стабильный циркадный ритм.\n"
                "**Если вы просыпаетесь ночью**, не включайте яркий свет и не берите телефон — это может активировать ваш мозг. Вместо этого попробуйте просто "
                "полежать спокойно и сосредоточиться на дыхании. Если через 15–20 минут сон всё ещё не приходит, встаньте с кровати и займитесь чем-то "
                "расслабляющим, например, почитайте книгу или послушайте успокаивающую музыку. Главное — не возвращайтесь к активным занятиям, таким как "
                "работа или просмотр экранов.\n\n\n"
                "\t *Трудности с пробуждением часто связаны с недостатком энергии или неправильным режимом сна.*\n"
                "Проблема может быть вызвана как внешними факторами (например, отсутствие естественного света утром), так и внутренними (нарушение "
                "циркадных ритмов или недостаточное восстановление организма во время сна). Чтобы улучшить процесс пробуждения, важно не только настроить "
                "режим сна, но и создать комфортные условия для утреннего подъёма.\n\n"
                "**  - Будильник:**\n"
                "После пробуждения в кровь выбрасывается гормон стресса – кортизол, который заряжает бодростью, но на одном кортизоле долго бодрствовать "
                "не получится, ему можно помочь. Если у вас за окно темно, то включите свет. Всегда легче просыпаться, когда в комнате светло. Очень могут "
                "помочь будильники с функцией рассвета. Самый яркий пример – умный дом. В назначенное время начнется имитация рассвета. Мягкий свет будет "
                "все ярче и ярче. Это поможет вам мягче проснуться. На будильник стоит поставить спокойную мелодию, чтоб она не была как 'молотком по голове'. "
                "Считается, что с активацией светового будильника уровень мелатонина уменьшается, постепенно инициируя пробуждение организма.\n\n"
                "**  - Также важно установить четкий график сна: старайтесь спать 7–9 часов, чтобы организм полностью восстанавливался.**\n"
                "Регулярный режим сна и бодрствования помогает нормализовать циркадные ритмы, что способствует более качественному отдыху и легкому пробуждению. "
                "Если вы ложитесь и встаёте в одно и то же время каждый день, даже в выходные, ваш организм будет лучше адаптироваться к графику. Вам будет "
                "легче засыпать и легче вставать.\n\n"
                "**  - Создайте свой утренний ритуал:**\n"
                "После пробуждения не хватайтесь за телефон, а сразу встаньте с кровати. Это поможет избежать 'цифровой зависимости' и начать день более "
                "осознанно. Выпейте стакан теплой воды — это запускает метаболизм и помогает организму проснуться.\n"
                "  Выполните легкую зарядку для подвижности позвоночника — это улучшает кровообращение, поможет взбодриться и исправить осанку. Примите холодный "
                "душ или умойтесь холодной водой, чтобы запустить нервную систему. Холодная вода стимулирует выброс адреналина, что делает вас более энергичным.\n\n"
                "**  - Завтрак:**\n"
                "Завтрак очень важный момент дня. Легкая пища с белками и сложными углеводами (например, овсянка с ягодами) даст энергию для начала дня. "
                "Завтрак также помогает стабилизировать уровень сахара в крови, что важно для поддержания концентрации и энергии в течение утра.\n"
                "Постарайтесь вообще не трогать телефон.\n"
                "Если вам нужно проверить свою почту или уведомления, то отведите себе на это определенное время после завтрака. За завтраком сосредоточьтесь "
                "на планировании дня (лучше все записывайте). Для каждого дела отведите определённое время, а не просто составляйте список задач. Так у вас "
                "больше шансов всё выполнить."
            ),
            # Остальные ключи остаются без изменений
            "Повышенная тревожность": (
                "Тревожность может быть как временной реакцией на стресс, так и постоянной проблемой, которая влияет на вашу жизнь. "
                "Важно понимать, что тревожность — это естественная реакция организма на угрозу или неопределенность, но если она становится постоянной или чрезмерной, "
                "это может серьезно отразиться на вашем эмоциональном и физическом здоровье. Причины повышенной тревожности могут быть разными: стресс на работе или в личной жизни, "
                "загруженность на учебе, накопленная усталость, недостаток сна или даже чрезмерное получение информации из новостей и социальных сетей. "
                "Чтобы эффективно бороться с тревожностью, важно научиться распознавать ее триггеры и применять проверенные методы для снижения напряжения.\n\n\n"
                "*Советы по борьбе с повышенной тревожностью:*\n\n"
                "   - **Научитесь распознавать триггеры:**\n"
                "Попробуйте выявить, что именно вызывает у вас приступы тревожности. Это могут быть определенные ситуации, мысли, люди или даже физические состояния "
                "(например, недосып или переутомление). Ведите дневник, где будете отмечать моменты, когда тревожность усиливается. Записывайте, что именно произошло, "
                "какие мысли вас посетили и как вы себя чувствовали физически. Это поможет вам лучше понять свои паттерны и научиться предотвращать или справляться с ними.\n\n"
                "   - **Практикуйте осознанность:**\n"
                "Осознанность помогает вам оставаться в настоящем, не позволяя тревожным мыслям о будущем или переживаниями о прошлом захватывать ваш разум. "
                "Начните с простых упражнений: сосредоточьтесь на своем дыхании, обратите внимание на звуки вокруг вас или попробуйте медитацию. Даже несколько минут в день могут значительно снизить уровень тревожности.\n\n"
                "   - **Ведите дневник тревог:**\n"
                "Записывая свои мысли, вы сможете взглянуть на них более объективно. Вы можете заметить, что многие из ваших страхов не имеют под собой реальной основы или что они преувеличены. "
                "В дневнике также можно отмечать, какие техники или действия помогли вам справиться с тревожностью в тот или иной момент. Иногда записывая причину, к вам может прийти ее решение.\n\n"
                "   **- Забота о физическом здоровье:**\n"
                "\t  - *Сон:* Убедитесь, что вы спите достаточно (7–9 часов в сутки). Недостаток сна усиливает тревожность. Старайтесь ложиться и вставать в одно и то же время, избегайте экранов за час до сна.\n"
                "\t  - *Питание:* Исключите кофеин и алкоголь, так как они могут усиливать тревожность. Ешьте больше продуктов, богатых магнием (бананы, шпинат, миндаль).\n"
                "\t  - *Физическая активность:* Регулярные упражнения снижают уровень кортизола (гормона стресса) и повышают уровень эндорфинов (гормонов счастья). Попробуйте йогу, легкую зарядку или просто регулярные прогулки на свежем воздухе.\n\n"
                "- **Расслябляющие техники:**\n"
                "\t  - *Мышечная релаксация:* Последовательно напрягайте и расслабляйте группы мышц, начиная с пальцев ног и заканчивая головой.\n"
                "\t  - *Дыхательная техника '4-7-8':* Медленно вдыхайте через нос (считая до 4), задержите дыхание (до 7), выдохните через рот (до 8). Повторите 4-8 раз.\n"
                "\t  - *Визуализация:* Представьте себе безопасное место (например, пляж или лес). Мысленно окунитесь в эту картинку, используя все чувства: запах, звуки, ощущения.\n\n"
                "- **Ограничение триггеров тревожности:**\n"
                "\t  - *Контроль информации:* Избегайте чрезмерного потребления новостей или социальных сетей, если они вызывают у вас тревогу.\n"
                "\t  - *Установите границы:* Научитесь говорить 'нет', если что-то перегружает вас.\n\n"
                "- **Общение и поддержка:**\n"
                "Иногда просто высказать свои страхи кому-то доверенному помогает снять напряжение. Если нет возможности общаться лично, найдите онлайн-сообщества людей с похожими проблемами."
                    ),
            "Чувствуете усталость днем": (
                "Дневная усталость часто является следствием плохого качества сна, но может быть связана и с другими факторами, "
                "такими как питание, уровень физической активности или даже психологическое состояние. Если вы регулярно чувствуете себя вялым и истощенным в течение дня, "
                "это может негативно сказываться на вашей продуктивности, настроении и общем качестве жизни. Чтобы справиться с дневной усталостью, важно понять ее причины "
                "и внедрить в свою жизнь простые, но эффективные привычки.\n\n"
                "**Причины дневной усталости:**\n"
                "\t- *Недостаток качественного сна:* Прерывистый или недостаточный сон ночью напрямую влияет на вашу энергию днем.\n"
                "\t- *Неправильное питание:* Переедание, особенно во время обеда, или употребление тяжелой пищи может вызывать чувство сонливости.\n"
                "\t- *Малоподвижный образ жизни:* Отсутствие физической активности снижает циркуляцию крови и замедляет метаболизм.\n"
                "\t- *Стресс и эмоциональное выгорание:* Постоянное напряжение истощает ресурсы организма.\n"
                "\t- *Обезвоживание:* Даже легкое обезвоживание может вызывать усталость и снижение концентрации.\n\n\n"
                "**Советы по борьбе с дневной усталостью:**\n\n"
                "\t- **Анализируйте свой режим сна:**\n"
                "Убедитесь, что вы спите 7–9 часов в сутки.\n"
                "Ложитесь и вставайте в одно и то же время, даже в выходные.\n"
                "Создайте комфортные условия для сна: темная комната, тишина, прохладная температура.\n"
                "Избегайте экранов (телефоны, компьютеры, телевизор) за час до сна, так как синий свет мешает выработке мелатонина.\n\n"
                "\t- **Контролируйте питание:**\n"
                "Не переедайте во время обеда. Выбирайте легкие, но питательные блюда, такие как овощи, белковая пища (курица, рыба) и сложные углеводы (гречка, киноа).\n"
                "Избегайте продуктов с высоким содержанием сахара, так как они вызывают резкий скачок энергии, за которым следует спад.\n"
                "Ешьте небольшими порциями каждые 3–4 часа, чтобы поддерживать стабильный уровень энергии.\n\n"
                "\t- **Делайте короткие прогулки на свежем воздухе:**\n"
                "Физическая активность, даже легкая, помогает улучшить кровообращение и повысить уровень энергии.\n"
                "Прогулки на свежем воздухе особенно полезны, так как они насыщают организм кислородом и снижают уровень стресса.\n"
                "Если нет возможности выйти на улицу, просто встаньте из-за стола каждые 30–60 минут и сделайте легкую разминку.\n\n"
                "\t- **Пейте достаточно воды:**\n"
                "Обезвоживание — одна из частых причин усталости. Старайтесь пить не менее 1,5–2 литров воды в день.\n"
                "Начните день со стакана воды, чтобы 'запустить' организм.\n\n"
                "\t- **Добавьте короткий дневной отдых:**\n"
                "Если позволяет график, то немного поспите днем (до 90 минут). Это поможет восстановить энергию без чувства заторможенности после пробуждения.\n"
                "Если сон невозможен, просто закройте глаза и расслабьтесь на несколько минут.\n\n"
                "\t- **Ограничьте кофеин и алкоголь:**\n"
                "Кофеин может временно взбодрить, но его чрезмерное употребление может нарушить сон ночью. Старайтесь ограничить кофе до первой половины дня.\n"
                "Алкоголь также нарушает качество сна, даже если кажется, что он помогает быстрее заснуть.\n\n\n"
                "\t **Дополнение:**\n"
                "Борьба с дневной усталостью требует комплексного подхода. Начните с малого. Проанализируйте свой сон и активность днем, питание и обстановку."
                "Короткая тренировка, смена обстановки, смена деятельности могут помочь, но не надолго. Все же нужно подробно разбирать свои сутки."
                "Меняйте все постепенно, чтобы изменения стали частью вашей повседневной жизни. Главное — будьте внимательны к своему организму и давайте ему то, что ему нужно: "
                "качественный сон, правильное питание, движение и отдых. Со временем вы заметите, как ваша энергия и продуктивность возрастут, а усталость отступит."
            ),
            "Сложно сосредоточиться": (
            "Проблемы с концентрацией внимания могут возникать по разным причинам: стресс, усталость, перегрузка информацией, желание быстрого дофамина(удовольствия). "
            "Поймите, что мотивация — это ничего. Мотивация только маленькая часть успеха. Основная часть — это дисциплина! Хотите достичь своих целей, прокачивайте дисциплину. Есть несколько способов повысить концентрацию  "
            "и продуктивность:\n\n"
            "1. Поймите для чего вы все делаете:\n"
            "Сядьте, успокойтесь, отложите все отвлекающие факторы. Вспомните для чего вы страетесь. "
            "Поймите сколько радости принесет вам достежение задуманного. Когда вы осознаете эту радость, то вам труднее будет отвлекаться от своих дел, отвлекаясь на телефон, короткие ролики, соц-сети и тд. Пока у вас нет точной цели, то не будет результа и желания достигать его! \n\n"
            "2. Разбейте задачи на мелкие шаги\n"
            "Когда задача кажется слишком сложной или большой, это может вызывать прокрастинацию и снижение концентрации. Ведь как справиться с тем, что далеко или очень большое. Люди часто бросают стараться, ведь не видят результат сразу, но нужно знать, что результат — это сумма всех маленьких шагов, которые вы делаете для своей цели.\n"
            "Как справиться с прокарастинацией:\n"
            "- Разбейте большую задачу на маленькие и понятные шаги.\n"
            "Например, вместо того чтобы 'написать отчет', начните с 'собрать данные' или 'составить план'.\n"
            "Каждый раз как вы выполнили маленький шаг, то похвалите себя. Вы сами не заметите как маленькие шаги превратились в большой результат."
            "3. Ставьте четкие цели\n"
            "Четкое понимание того, чего вы хотите достичь, помогает сосредоточиться.\n"
            "- Формулируйте конкретные и достижимые цели. Например, вместо 'поработать над проектом' скажите себе: "
            "'за следующие 30 минут я составлю введение к проекту'.\n"
            "Это также поможет избежать чувства перегруженности.\n\n"
            "4. Создайте комфортную среду\n"
            "Окружение играет ключевую роль в вашей способности концентрироваться:\n"
            "- Уберите отвлекающие факторы: выключите уведомления на телефоне, закройте ненужные вкладки в браузере. Если вы не можете не брать телефон, то уберите его в соседнюю комнату и включите звук только для звонов (если будет, что-то очень важное, то вам обязательно позвонят).\n"
            "- Организуйте рабочее пространство так, чтобы оно было чистым, удобным и без визуального шума.\n\n"
            "5. Тренируйте силу воли\n"
            "Сила воли тесно связана с концентрацией. Чем лучше вы умеете контролировать свои импульсы (желание отвлечся), тем легче вам будет "
            "игнорировать отвлекающие факторы.\n"
            "- Практикуйте дисциплину: например, установите таймер на 25 минут (техника Помидора) и работайте без перерыва. "
            "После этого сделайте короткий отдых на 5-10 минут.\n\n"
            "6. Занимайтесь спортом\n"
            "Физические упражнения и прогулки на свежем воздухе улучшают кровообращение и стимулируют работу мозга.\n"
            "- Даже короткая прогулка может помочь вам взбодриться и вернуться к задаче с новыми силами.\n"
            "- Йога и растяжка также способствуют расслаблению и улучшению концентрации.\n\n"
            "7. Научитесь управлять информационными потоками\n"
            "Перегрузка информацией часто мешает сосредоточиться.\n"
            "Так ли важна информация, которую вы просматриваете в течение дня?\n"
            "- Ограничьте время, проведенное в социальных сетях или на новостных сайтах.\n"
            "- Выделяйте специальное время для проверки почты или сообщений, а не делайте это постоянно.\n\n"
            "8. Ищите смысл в том, что вы делаете\n"
            "Если вы не видите смысла в своей задаче, вам будет сложно сосредоточиться.\n"
            "- Задайте себе вопрос: 'Зачем мне это нужно?' Ответ на этот вопрос поможет активировать вашу внутреннюю мотивацию.\n"
            "Например, если вы учитесь, напомните себе, как эти знания помогут вам в будущем.\n\n"
            "9. Практикуйте упражнения для тренировки внимания\n"
            "Существуют специальные упражнения, которые помогают развивать концентрацию:\n"
            "- В конце дня попробуйте вспомнить все события дня до мелочей.\n"
            "- Играйте в игры, которые требуют внимания и быстрого реагирования (например, головоломки или шахматы).\n\n"
            "10. Холод\n"
            "- Холодный душ с утра поможет освежить сознание, вспомнить свои цели и удовольствия от их достижений"
            "- Не надо работать в жаре или даже в тепле. Оденьтесь тепло, наденьте носки и откройте окна. Нужно держат голову в прохладе, чтоб сохранять ясность ума\n\n"
            "11. Правило 1440\n"
            "Вы должны понять, что в ваших сутка всего 1440 минут. Где-то 480 минут (8 часов) вы тратите на сон, а на что вы тратите остальное время? Достоин ли телефон, короткие ролики, скроллинг новостей и ленты соц-сетей вашего драгоценного времени?"
            "Задавайте себе этот вопрос каждый раз, когда вы понимаете, что хотите отвлечься или уже отвлеклись."

        ),
        }

        # Добавление конкретных советов для выбранных проблем
        for problem in selected_problems:
            doc.add_heading(problem, level=2)
            paragraph = doc.add_paragraph()

            # Разделяем текст на части и выделяем подпункты
            parts = advice_dict.get(problem, "Для этой проблемы нет специальных рекомендаций.").split("**")
            for i, part in enumerate(parts):
                if i % 2 == 1:  # Выделенные части (подпункты)
                    run = paragraph.add_run(part)
                    run.bold = True
                else:  # Обычный текст
                    italic_parts = part.split("*")  # Разделяем текст на обычный и курсив
                    for j, italic_part in enumerate(italic_parts):
                        if j % 2 == 1:  # Курсивные части
                            run = paragraph.add_run(italic_part)
                            run.italic = True
                        else:  # Обычный текст
                            paragraph.add_run(italic_part)

        # Сохранение файла
        file_path = os.path.join(os.getcwd(), "Советы по улучшению ментального здоровья.docx")
        doc.save(file_path)
        messagebox.showinfo("Успех", f"Советы сохранены в файл: {file_path}")
    def fill_info(self):
        try:
            # Проверка на пустые поля
            if not all([self.age_input.get(), self.height_input.get(), self.weight_input.get()]):
                raise BlankField()
            
            # Проверка на выбор пола
            if not self.sex_var.get():
                raise ValueError("Выберите пол")
            
            # Преобразование значений в числа
            age = float(self.age_input.get().replace(",", '.'))
            height = float(self.height_input.get().replace(',', '.'))
            weight = float(self.weight_input.get().replace(',', '.'))
            
            # Проверка на возраст
            if age < 16 or age > 60:
                raise ValueError("Возраст должен быть от 16 до 60 лет")
            
            # Заполнение базы данных
            self.database['Age'] = age
            self.database['Height'] = height
            self.database['Weight'] = weight
            self.database['Sex'] = self.sex_var.get()
            
            goal = self.goal_var.get()
            if goal == "Bulking":
                self.database['Bulking'] = True
            elif goal == "Losing":
                self.database['Losing'] = True
            elif goal == "Healthing":
                self.database['Healthing'] = True
            
            if not any([self.database['Bulking'], self.database['Losing'], self.database['Healthing']]):
                raise BlankField()
            
            # Переход на вторую страницу
            self.stacked_widget.winfo_children()[2].pack(fill="both", expand=True)
            self.stacked_widget.winfo_children()[1].pack_forget()
        
        except BlankField as e:
            messagebox.showerror("Ошибка", str(e))
        except ValueError as e:
            messagebox.showerror("Ошибка", str(e))

    def body_fat_measure(self):
        dialog = BodyFatDialog(self.database)
        dialog.mainloop()

    def start_workout(self):
        selected_days = [cb.cget("text") for cb in self.days_checkboxes if cb.get()]
        if not selected_days:
            messagebox.showwarning("Предупреждение", "Выберите хотя бы один день недели")
            return
        workout_plan = {}
        for day in selected_days:
            workout_plan[day] = []
            exercises = []
            for key in self.database.keys():
                if self.database[key] and key in self.exercise_database:
                    exercises.extend(self.exercise_database[key])
            shuffle(exercises)
            age_limiter = 0
            if 16 <= self.database['Age'] <= 20:
                age_limiter = 0
            elif 21 <= self.database['Age'] <= 40:
                age_limiter = 1
            else:
                age_limiter = 2
            step = 0
            while exercises:
                if step == len(selected_days):
                    step = 0
                workout_plan[selected_days[step]].append(
                    (exercises[0][0], self.duration_database[exercises[0][1]][age_limiter])
                )
                del exercises[0]
                step += 1
        self.show_workout_plan(workout_plan)

    def show_workout_plan(self, workout_plan):
        plan_window = ctk.CTkToplevel(self)
        plan_window.title("Тренировочный план")
        plan_window.geometry("700x500")
        for day, exercises in workout_plan.items():
            day_label = ctk.CTkLabel(plan_window, text=day, font=("Arial", 16, "bold"))
            day_label.pack(pady=5)
            exercises_text = ', '.join([f"{name} ({duration})" for name, duration in exercises])
            exercises_label = ctk.CTkLabel(plan_window, text=exercises_text, font=("Arial", 14), wraplength=600)
            exercises_label.pack(pady=5)

    def welcome(self):
        welcome_window = ctk.CTkToplevel(self)
        welcome_window.title("Краткий экскурс")
        welcome_window.geometry("700x500")
        welcome_phrases = {
            'Bulking': [
                "Набор массы - трудный и ресурсозатратный процесс.",
                " и ужасно большим приёмам пищи. ",
                "Плюсы - можно есть почти всё, что в холодильнике, и не надо делать кардиотренировки."
            ],
            'Losing': [
                "\nСбрасывать вес трудно психологически. Различные ограничения, диеты - очень давит эмоционально.",
                "\nПридётся ограничивать себя почти во всём и заниматься, в первую очередь, кардиотренировками: ",
                "\nбег, степ, велотренировки и т.п."
            ],
            'Healthing': [
                "\nЗдоровье всегда трудно поправлять. Это походы ко врачам, понимание своих индивидуальных проблем.",
                "\nДалее будут лишь общие советы."
            ]
        }
        message_text = []
        for key in welcome_phrases.keys():
            if self.database[key]:
                message_text.append(''.join(welcome_phrases[key]))
        message_label = ctk.CTkLabel(welcome_window, text=' А теперь к другим советам. '.join(message_text), wraplength=600, font=("Arial", 16))
        message_label.pack(padx=20, pady=20)

class BodyFatDialog(ctk.CTkToplevel):
    def __init__(self, database):
        super().__init__()
        self.title("Оптимальное КБЖУ")
        self.geometry("600x400")
        self.db = database
        layout = ctk.CTkFrame(self)
        layout.pack(fill="both", expand=True, padx=20, pady=20)
        info_label = ctk.CTkLabel(layout, text=f"Возраст: {int(self.db['Age'])} лет\n"
                                               f"Рост: {int(self.db['Height'])} см\n"
                                               f"Вес: {int(self.db['Weight'])} кг",
                                  font=("Arial", 20))
        info_label.pack(pady=10)
        self.calculate_and_display_info()

    def calculate_and_display_info(self):
        gender = self.db['Sex']
        weight = self.db['Weight']
        height = self.db['Height']
        age = self.db['Age']
        bulking = self.db['Bulking']
        losing = self.db['Losing']
        healthing = self.db['Healthing']
        calories = self.calculate_calories(gender, weight, height, age, bulking, losing, healthing)
        rounded_calories = int(calories)
        proteins = int(calories * 0.3 / 4)
        fats = int(calories * 0.3 / 9)
        carbs = int(calories * 0.4 / 4)
        info_text = f"{'Для набора мышечной массы' if bulking else 'Для похудения' if losing else 'Для укрепления здоровья'}:\n" \
                    f"Калории: {rounded_calories}\n" \
                    f"Белки: {proteins} г\n" \
                    f"Жиры: {fats} г\n" \
                    f"Углеводы: {carbs} г"
        info_label = ctk.CTkLabel(self, text=info_text, font=("Arial", 20))
        info_label.pack(pady=10)

    def calculate_calories(self, gender, weight, height, age, bulking, losing, healthing):
        if bulking:
            if gender == 'Мужской':
                return round((10 * weight) + (6.25 * height) - (5 * age) + 5)
            elif gender == 'Женский':
                return round((10 * weight) + (6.25 * height) - (5 * age) - 161)
        elif losing:
            if gender == 'Мужской':
                return round((88.362 + (13.397 * weight) + (4.799 * height) - (5.677 * age)) * 0.8)
            elif gender == 'Женский':
                return round((447.593 + (9.247 * weight) + (3.098 * height) - (4.33 * age)) * 0.8)
        elif healthing:
            if gender == 'Мужской':
                return round(447.593 + (9.247 * weight) + (3.098 * height) - (4.33 * age))
            elif gender == 'Женский':
                return round(88.362 + (13.397 * weight) + (4.799 * height) - (5.677 * age))
        else:
            return 0

if __name__ == "__main__":
    app = GymHelper()
    app.mainloop()
